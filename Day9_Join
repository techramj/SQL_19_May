Join:
When data required from more than one table then we can use join.


Rules:
1. If column is present in both the table then qualifier is manadatory
2. column part of using clause cannot have qualifier
3. 

Type of Join:
1.Join with using clause
   EG: SELECT employee_id,last_name,department_id, department_name
      FROM employees JOIN departments
      USING(department_id);
   Limitation: if the column name is differnt in both table, cannot join using using clause
               if the datatype is different then cannot join by using clause.
               
 2. Join with On clause
 
 
 
 3. Inner Join
 
 
 
 
 4. Outer join
     a. left outer join
        SELECT e.employee_id,e.last_name,d.department_id, d.department_name
        FROM employees e LEFT OUTER JOIN departments d
        ON e.department_id = d.department_id;
     
     b. right outer join
          SELECT e.employee_id,e.last_name,d.department_id, d.department_name
          FROM employees e RIGHT OUTER JOIN departments d
          ON e.department_id = d.department_id;
     
     c. full outer join
     
         SELECT e.employee_id,e.last_name,d.department_id, d.department_name
        FROM employees e FULL OUTER JOIN departments d
        ON e.department_id = d.department_id;
        
        
    5. equi join
      --all the query above are equi join
    
    
    
    6. NON equi join
       SELECT e.employee_id, e.last_name, e.salary, j.grade
       FROM employees e  JOIN job_grades j
        ON e.salary BETWEEN j.min_sal AND j.max_sal;
        
        
     7. SELF JOIN: 
     
     
     
     8. CROSS JOIN
     
     
     
     9. Natural Join
        
        
        
        
        
    
--WAQ TO find NAME contain EXACT 3 a;

SELECT * FROM employees
WHERE LOWER(last_name) LIKE '%a%a%a';


--WAQ TO find NAME contain atleast 3 a  ; eg: ananya, anaanaya
SELECT * FROM employees
WHERE INSTR(LOWER(last_name),'a',1,3)!=0 
AND INSTR(LOWER(last_name),'a',1,4)=0

SELECT employee_id,last_name,department_id, department_name
FROM employees JOIN departments
USING(department_id);  --consider deparment_id for joining

SELECT employee_id,last_name,department_id, department_name,
employees.manager_id, departments.manager_id AS dept_manager_id
FROM employees JOIN departments
USING(department_id);


SELECT employee_id,last_name,employees.department_id, department_name
FROM employees JOIN departments
ON employees.department_id = departments.department_id;


SELECT e.employee_id,e.last_name,d.department_id, d.department_name
FROM employees e JOIN departments d
ON e.department_id = d.department_id;

--left join
SELECT e.employee_id,e.last_name,d.department_id, d.department_name
FROM employees e LEFT OUTER JOIN departments d
ON e.department_id = d.department_id;


--right join
SELECT e.employee_id,e.last_name,d.department_id, d.department_name
FROM employees e RIGHT OUTER JOIN departments d
ON e.department_id = d.department_id;


--full outer join
SELECT e.employee_id,e.last_name,d.department_id, d.department_name
FROM employees e FULL OUTER JOIN departments d
ON e.department_id = d.department_id;



--ANSI SQL;

SELECT employee_id,last_name,d.department_id, department_name
FROM employees e , departments d
WHERE e.department_id = d.department_id;

--left join
SELECT employee_id,last_name,d.department_id, department_name
FROM employees e , departments d
WHERE e.department_id = d.department_id(+);

--right join
SELECT employee_id,last_name,d.department_id, department_name
FROM employees e , departments d
WHERE e.department_id(+) = d.department_id;


--full join(not allowed in old query)
SELECT employee_id,last_name,d.department_id, department_name
FROM employees e , departments d
WHERE e.department_id(+) = d.department_id(+);  --not allowed



SELECT e.employee_id, e.last_name,e.manager_id,
m.last_name AS manager_name
FROM employees e LEFT OUTER JOIN employees m
ON e.manager_id = m.employee_id
ORDER BY e.employee_id;


--last_name and colleage name
FOR department 10,20,30,40,60
  
SELECT e.employee_id, e.last_name, e.department_id,
c.last_name AS colleage_name
FROM employees e JOIN employees c
ON e.department_id = c.department_id
AND e.employee_id != c.employee_id
WHERE e.department_id IN (10,20,30,40,60);



SELECT e.employee_id, e.last_name, d.department_name,
l.city, c.country_name
FROM employees e JOIN departments d
ON e.department_id = d.department_id
JOIN locations l
ON l.location_id=d.location_id
JOIN countries c
ON c.country_id = l.country_id
WHERE l.city='Toronto';


SELECT e.employee_id, e.last_name, d.department_name,
l.city, c.country_name
FROM employees e , departments d, locations l, countries c
WHERE e.department_id = d.department_id
AND l.location_id=d.location_id
AND  c.country_id = l.country_id
AND l.city='Toronto';


SELECT last_name,salary
FROM employees 
WHERE department_id IN (SELECT department_id FROM departments 
                         WHERE location_id IN (SELECT location_id FROM locations 
                                                WHERE city='Toronto')
                                                );            












